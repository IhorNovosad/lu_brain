/**
	Copyright Â© 2021 Oleh Ihorovych Novosad 
*/

///////////////////////////////////////////////////////////////////////////////
// 

	static Hnn_Links hnn_links_create(Mem mem, lu_size t1_size, lu_size t2_size, lu_size t3_size, lu_size t4_size)
	{
		lu_assert(mem);

		Hnn_Links self = (Hnn_Links) mem_alloc(mem, sizeof(struct hnn_links));
		lu_assert(self);

		self->mem = mem;

		self->table_1 =	hnn_table_create(mem, t1_size);
		self->table_2 = hnn_table_create(mem, t2_size);
		self->table_3 = hnn_table_create(mem, t3_size);
		self->table_4 = hnn_table_create(mem, t4_size);

		return self;
	}

	static void hnn_links_destroy(Hnn_Links self)
	{
		lu_assert(self);
		Mem mem = self->mem;
		lu_assert(mem);

		if(self->table_1)
		{
			hnn_table_destroy(self->table_1);
			self->table_1 = NULL;
		}

		if(self->table_2)
		{
			hnn_table_destroy(self->table_2);
			self->table_2 = NULL;
		}

		if(self->table_3)
		{
			hnn_table_destroy(self->table_3);
			self->table_3 = NULL;
		}

		if(self->table_4)
		{
			hnn_table_destroy(self->table_4);
			self->table_4 = NULL;
		}

		self->mem = NULL;
		mem_free(mem, (lu_p_byte) self);
	}

///////////////////////////////////////////////////////////////////////////////
// 

	static Hnn_Cell* hnn_links_connect(Hnn_Links self, Hnn_Cell c1)
	{

	}

	static Hnn_Cell* hnn_links_connect_2(Hnn_Links self, Hnn_Cell c1, Hnn_Cell c2)
	{

	}

	static Hnn_Cell* hnn_links_connect_3(Hnn_Links self, Hnn_Cell c1, Hnn_Cell c2, Hnn_Cell c3)
	{

	}

	static Hnn_Cell* hnn_links_connect_4(Hnn_Links self, Hnn_Cell c1, Hnn_Cell c2, Hnn_Cell c3, Hnn_Cell c4)
	{

	}