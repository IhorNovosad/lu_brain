/**
	Copyright Â© 2020 Oleh Ihorovych Novosad 
*/


///////////////////////////////////////////////////////////////////////////////
// 

	Lu_Wave lu_story_find_async(Lu_Story self, Lu_Find_Opts opts)
	{
		lu_user_assert(self, "Lu_Story is NULL");
		lu_user_assert(opts, "Lu_Find_Opts is NULL");

		Gate gate = brain_gate(self->brain);

		W_Find wave = gate_find_wave_wait(gate);

		w_find_init(wave, self, opts);

		w_find_progress(wave);

		return (Lu_Wave) wave;
	}

	Lu_Find_Resp lu_story_find(Lu_Story self, Lu_Find_Opts opts)
	{
		lu_user_assert(self, "Lu_Story is NULL");
		lu_user_assert(opts, "Lu_Find_Opts is NULL");

		Lu_Wave wave = lu_story_find_async(self, opts);
		
		lu_wave_join(wave);

		return (Lu_Find_Resp) lu_wave_response(wave);
	}