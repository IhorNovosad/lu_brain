/**
	Copyright Â© 2020 Oleh Ihorovych Novosad 
*/
 
///////////////////////////////////////////////////////////////////////////////
// Mem_Db

	void mem_db_destroy_internal(Mem self, Mem parent_mem, const char* file, int line)
	{
		mem_free(parent_mem, (lu_p_byte) self);
	}

	Mem_Db mem_db_create(Mem parent_mem, lu_size size_in_bytes)
	{
		lu_p_void buff_start		= mem_alloc(parent_mem, size_in_bytes);

		if (buff_start == NULL) return NULL;

		Mem_Db self 				= (Mem_Db) buff_start;

		mem_preallocated_init(&self->super, parent_mem, buff_start, size_in_bytes, sizeof(struct mem_db));

		if (mem_preallocated_is_out_of_mem(&self->super))
		{
			mem_destroy((Mem) self, parent_mem);
			return NULL;
		}
		return self;
	}

	void mem_db_destroy(Mem_Db self, Mem parent_mem)
	{
		mem_destroy((Mem) self, parent_mem);
	}

///////////////////////////////////////////////////////////////////////////////
// Mem_Instance

	lu_p_byte mem_instance_create_internal(Mem_Db self, lu_size size_in_bytes, const char* file, int line)
	{
		// log for debug

		return mem_alloc((Mem) self, size_in_bytes);
	}

///////////////////////////////////////////////////////////////////////////////
// Mem_Table

	Mem_Table mem_table_create_internal(
 		Mem_Db 			self, 
 		lu_size 		record_size_in_bytes, 
 		lu_size 		table_size_in_records, 
 		lu_flags 		flags,
 		const char* 	file,
 		int 			line
 	)
 	{

 	}


	void mem_table_resize_internal(Mem_Table self, lu_size new_size_in_bytes, lu_flags flags, const char* file, int line)
	{
		lu_debug_message("NOT IMPLEMENTED YET!!!");
	}

///////////////////////////////////////////////////////////////////////////////
// Mem_Record

	lu_p_byte mem_record_alloc_internal(Mem_Table mem_table, const char* file, int line)
	{

	}

 	void mem_record_free_internal(Mem_Table mem_table, lu_p_byte record, const char* file, int line)
 	{

 	}

