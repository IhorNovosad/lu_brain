/**
	Copyright Â© 2020 Oleh Ihorovych Novosad 
*/

///////////////////////////////////////////////////////////////////////////////
// 

	static N_Mem n_mem_create(Lu_Brain brain, N_Mem_Opts opts)
	{
		lu_user_assert(brain, "Lu_Brain is NULL");
		lu_user_assert(brain->app_mem, "Lu_Brain app_mem is NULL");

		N_Mem self 			= (N_Mem) mem_alloc(brain->app_mem, sizeof(struct n_mem));
		lu_user_assert(self, "Cannot allocate N_Mem");

		self->brain 		= brain;
		self->opts 			= *opts;

		self->coms 			= n_mem_coms_create(self, brain->app_mem);
		lu_user_assert(self->coms, "Cannot allocate N_Mem components");

		self->neus 			= n_mem_neus_create(self, brain->app_mem);
		lu_user_assert(self->neus, "Cannot allocate N_Mem neus");

		self->lins 			= n_mem_lins_create(self, brain->app_mem);
		lu_user_assert(self->lins, "Cannot allocate N_Mem lins");

		return self;
	}

	static Mem_Table n_mem_coms_create(N_Mem self, Mem mem)
	{

	}

	static Mem_Table n_mem_neus_create(N_Mem self, Mem mem)
	{

	}

	static Mem_Table n_mem_lins_create(N_Mem self, Mem mem)
	{

	}



///////////////////////////////////////////////////////////////////////////////
// Neu creators

	// static N_Col n_mem_n_col_create(N_Mem self, S_Col s_col)
	// {
		
		
	// 	return NULL;
	// }

// ///////////////////////////////////////////////////////////////////////////////
// // S_Mem Neu getters

// 	static inline N_Ent neu_ent_get(S_Mem s_mem, lu_size neu_ent_id) 
// 	{  	
// 		return (N_Ent) mem_table_get(s_mem->neu_ents, neu_ent_id);
// 	} 

// 	static inline N_Base neu_b_get(S_Mem s_mem, lu_size neu_b_id) 
// 	{  	
// 		return (N_Base) mem_table_get(s_mem->neu_bs, neu_b_id);
// 	} 

// 	static inline N_Name neu_name_get(S_Mem s_mem, lu_size neu_name_id) 
// 	{  	
// 		return (N_Name) mem_table_get(s_mem->neu_names, neu_name_id);
// 	}

// 	static inline N_Base neu_ent_b_get(S_Mem s_mem, lu_size neu_ent_id) 
// 	{  	
// 		N_Ent ne = (N_Ent) mem_table_get(s_mem->neu_ents, neu_ent_id);
// 		lu_size com_id = ne->coms[NEU_B_ID];
// 		return com_id ? neu_b_get(s_mem, com_id) : NULL;
// 	}

// 	static inline N_Name neu_ent_name_get(S_Mem s_mem, lu_size neu_ent_id)
// 	{
// 		N_Ent ne = (N_Ent) mem_table_get(s_mem->neu_ents, neu_ent_id);
// 		lu_size com_id = ne->coms[NEU_NAME_ID];
// 		return com_id ? neu_name_get(s_mem, com_id) : NULL;
// 	}

// ///////////////////////////////////////////////////////////////////////////////
// // S_Mem Lin getters

// 	static inline Lin_Ent lin_ent_get(S_Mem s_mem, lu_size lin_ent_id) 
// 	{  	
// 		return (Lin_Ent) mem_table_get(s_mem->lin_ents, lin_ent_id);
// 	} 

// 	static inline Lin_B lin_b_get(S_Mem s_mem, lu_size lin_b_id) 
// 	{  	
// 		return (Lin_B) mem_table_get(s_mem->lin_bs, lin_b_id);
// 	} 

// 	static inline Lin_B lin_ent_b_get(S_Mem s_mem, lu_size lin_ent_id)
// 	{
// 		Lin_Ent lin_ent = (Lin_Ent) mem_table_get(s_mem->lin_ents, lin_ent_id);
// 		lu_size com_id = lin_ent->coms[LIN_B_ID];
// 		return com_id ? lin_b_get(s_mem, com_id) : NULL;
// 	}
