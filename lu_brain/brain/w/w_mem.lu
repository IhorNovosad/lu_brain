/**
	Copyright Â© 2020 Oleh Ihorovych Novosad 
*/
 
///////////////////////////////////////////////////////////////////////////////
//

	static W_Mem w_mem_init(W_Mem self, Lu_Brain brain)
	{
		lu_user_assert(self, "W_Mem is NULL");
		lu_user_assert(brain, "Lu_Brain is NULL");
 
 		self->brain 		= brain;
 		
 		S_Mem s_mem = brain->s_mem;
 		lu_user_assert(s_mem, "S_Mem is NULL");

		self->recs 			= arr_temp_create(arr_count(s_mem->recs));
 
 		S_Rec s_rec;
 		W_Rec w_rec;
 		lu_size i;

		for(i = 0; i < arr_size(self->recs); i++)
		{
			s_rec = (S_Rec) arr_get(s_mem->recs, i);

			// s_rec maye takozh vkazivnyk na lu_rec
			w_rec = w_rec_create(self, s_rec);
			lu_user_assert(w_rec, "Cannot create W_Rec");
			
			arr_set(self->recs, i, (lu_p_void) w_rec);
		}

		return self;
	}

	static void w_mem_destroy(W_Mem self)
	{
		lu_size i;
		W_Rec w_rec;

		if (self->recs)
		{
			for(i = 0; i < arr_count(self->recs); i++)
			{
				w_rec = (W_Rec) arr_get(self->recs, i);
				w_rec_destroy(w_rec);
			}

			arr_temp_destroy(self->recs);
		}
	}


	static W_Rec w_mem_rec_get(W_Mem self, lu_size rec_id)
	{
		return (W_Rec) arr_get(self->recs, rec_id);
	}

	static void w_mem_save_async(W_Mem self, Lu_Story story)
	{
		lu_user_assert_void(self, "Lu_Wave is NULL");
		lu_user_assert_void(story, "Lu_Story is NULL");
		lu_user_assert_void(self->brain, "Lu_Wave brain is NULL");

		Lu_Brain brain 	= self->brain;
		Arr recs 		= brain->recs;

		lu_size block_i;
		lu_size rec_i;
		Data data;

		Lu_Rec rec; 
		W_Rec w_rec;

		for(block_i = 0; block_i < story->blocks_count; block_i++)
		{
			for(rec_i = 0; rec_i < story->datum_w; rec_i++)
			{
				w_rec 	= w_mem_rec_get(self, rec_i);
				lu_user_assert_void(w_rec, "W_Rec is NULL");

				data 	= lu_story_data_get(story, rec_i, block_i);

				// lu_debug("\n[block=%lu, rec=%lu, (0,0)=", block_i, rec_i);
				// data->values ? lu_debug("%.0f", data->values[0]) : lu_debug("NULL");
				// lu_debug("] SAVING ...");

				if (data->values) 
					w_rec_data_save(w_rec, data, block_i);
			}
		}
	}
