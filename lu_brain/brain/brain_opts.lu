/**
	Copyright Â© 2020 Oleh Ihorovych Novosad 
*/
 
///////////////////////////////////////////////////////////////////////////////
// Init, create and destroy

	Lu_Brain_Opts lu_brain_opts_create(lu_size id, lu_size size_in_bytes)
	{
		Lu_Brain_Opts self 					= (Lu_Brain_Opts) mem_temp_alloc(sizeof(struct lu_brain_opts));

		// Initialize
		self->id							= id;
		self->size_in_bytes					= size_in_bytes;

		gate_opts_init(&self->gate_opts);

		self->rec_opts						= arr_temp_create(10);

		n_mem_opts_init(&self->n_mem_opts);

		return self;
	}  

	static void each_rec_opts_destroy(lu_p_void item)
	{
		lu_rec_opts_destroy((Lu_Rec_Opts) item);
	}

	void lu_brain_opts_destroy(Lu_Brain_Opts self)
	{
		arr_each(self->rec_opts, each_rec_opts_destroy);

		arr_temp_destroy(self->rec_opts);
		mem_temp_free((lu_p_byte) self);
	}


///////////////////////////////////////////////////////////////////////////////
// 

	