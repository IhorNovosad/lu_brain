/**
	Copyright Â© 2020 Oleh Ihorovych Novosad 
*/

///////////////////////////////////////////////////////////////////////////////
// 

	static S_Neu s_neu_init(S_Neu self, enum s_net_type type, S_Layer layer, lu_size x, lu_size y)
	{
		lu_user_assert(layer, "S_Layer is NULL");

		self->type 			= type;
		self->layer 		= layer;
		self->x				= x;
		self->y 			= y;

		self->b 			= NULL;
		self->d 			= NULL;
		self->cols 			= NULL;
		self->t 			= NULL;

		return self;
	}

	static void s_neu_b_layer_connect(S_Neu d, S_Layer b_layer)
	{
		lu_user_assert_void(d, "S_Neu is NULL");
		lu_user_assert_void(b_layer, "S_Layer is NULL");

		lu_size x 		= d->x;
		lu_size y 		= d->y;

		// x, y				// np
		// x + 1, y	  		// nl
		// x + 1, y + 1 	// vl
		// x, y + 1			// vp

		S_Neu b = NULL;

		b = s_layer_neu_get(b_layer, x, y);
		lu_user_assert_void(b, "S_Neu is NULL");

		b->d->np = d;
		d->b->vl = b;

		b = s_layer_neu_get(b_layer, x + 1, y);
		lu_user_assert_void(b, "S_Neu is NULL");

		b->d->nl = d;
		d->b->vp = b;

		b = s_layer_neu_get(b_layer, x + 1, y + 1);
		lu_user_assert_void(b, "S_Neu is NULL");

		b->d->vl = d;
		d->b->np = b;

		b = s_layer_neu_get(b_layer, x, y + 1);
		lu_user_assert_void(b, "S_Neu is NULL");

		b->d->vp = d;
		d->b->nl = b;
	}

	static void s_a_neu_b_layer_connect(S_Neu d, S_Layer b_layer)
	{
		lu_user_assert_void(d, "S_Neu is NULL");
		lu_user_assert_void(b_layer, "S_Layer is NULL"); 

		lu_size x 		= d->x;
		lu_size y 		= 0;

		// x, y				// p
		// x + 1, y	  		// l

		S_Neu b = NULL;

		b = s_layer_neu_get(b_layer, x, y);
		lu_user_assert_void(b, "S_Neu is NULL");

		b->d->vp = d;
		d->b->vl = b;

		b = s_layer_neu_get(b_layer, x + 1, y);
		lu_user_assert_void(b, "S_Neu is NULL");

		b->d->vl = d;
		d->b->vp = b;
	}


