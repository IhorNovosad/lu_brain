/**
	Copyright Â© 2020 Oleh Ihorovych Novosad 
*/

///////////////////////////////////////////////////////////////////////////////
// 

	static S_Neu s_neu_init(S_Neu self, enum s_net_type type, S_Layer layer, lu_size x, lu_size y, lu_size z)
	{
		lu_user_assert(layer, "S_Layer is NULL");

		self->type 			= type;

		self->layer 		= layer;
		self->x				= x;
		self->y 			= y;
		self->z 			= z;

		self->b 			= NULL;
		self->d 			= NULL;
		self->t 			= NULL;

		self->neus 			= NULL;
		self->conf			= NULL;
 
		return self;
	}

	static void s_cell_b_layer_connect(S_Neu d, S_Layer b_layer)
	{
		lu_size z;
		S_Neu com = NULL;
		for (z = 0; z < b_layer->d; z++)
		{
			com = s_layer_neu_get(b_layer, d->x, d->y, z);

			com->d[0] 	= d;
			d->b[z] 	= com;
		}
	}

	static void s_neu_b_layer_connect(S_Neu d, S_Layer b_layer)
	{
		lu_user_assert_void(d, "S_Neu is NULL");
		lu_user_assert_void(b_layer, "S_Layer is NULL");

		lu_size x 			= d->x;
		lu_size y 			= d->y;

		// x, y				// np
		// x + 1, y	  		// nl
		// x + 1, y + 1 	// vl
		// x, y + 1			// vp

		S_Neu b 			= NULL;

		b = s_layer_neu_get(b_layer, x, y, 0);
		lu_user_assert_void(b, "S_Neu is NULL");

		d_np(b) = d; // b->d->np = d; 
		b_vl(d) = b; // d->b->vl = b; 

		b = s_layer_neu_get(b_layer, x + 1, y, 0);
		lu_user_assert_void(b, "S_Neu is NULL");

		d_nl(b) = d; // b->d->nl = d;
		b_vp(d) = b; // d->b->vp = b;

		b = s_layer_neu_get(b_layer, x + 1, y + 1, 0);
		lu_user_assert_void(b, "S_Neu is NULL");

		d_vl(b) = d; // b->d->vl = d;
		b_np(d) = b; // d->b->np = b;

		b = s_layer_neu_get(b_layer, x, y + 1, 0);
		lu_user_assert_void(b, "S_Neu is NULL");

		d_vp(b) = d; // b->d->vp = d;
		b_nl(d) = b; // d->b->nl = b;
	}

	static void s_a_neu_b_layer_connect(S_Neu d, S_Layer b_layer)
	{
		lu_user_assert_void(d, "S_Neu is NULL");
		lu_user_assert_void(b_layer, "S_Layer is NULL"); 

		lu_size x 		= d->x;
		lu_size y 		= 0;

		// x, y				// p
		// x + 1, y	  		// l

		S_Neu b = NULL;

		b = s_layer_neu_get(b_layer, x, y, 0);
		lu_user_assert_void(b, "S_Neu is NULL");

		d_p(b) = d; // b->d->vp = d;
		b_l(d) = b; // d->b->vl = b;

		b = s_layer_neu_get(b_layer, x + 1, y, 0);
		lu_user_assert_void(b, "S_Neu is NULL");

		d_l(b) = d; // b->d->vl = d;
		b_p(d) = b; // d->b->vp = b;
	}


