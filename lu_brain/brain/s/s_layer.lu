/**
	Copyright Â© 2020 Oleh Ihorovych Novosad 
*/

///////////////////////////////////////////////////////////////////////////////
// Create and destroy

	static S_Layer s_layer_init
	( 
		S_Layer self, 
		S_Rec rec, 
		Mem mem, 
		enum s_layer_type type, 
		lu_size l, 
		lu_size w, 
		lu_size h, 
		lu_size d
	)
	{
		lu_user_assert(self, "S_Layer is NULL");
		lu_user_assert(rec, "Rec is NULL");
		lu_user_assert(mem, "Mem is NULL");
		lu_user_assert(w > 0, "Width should be greater than 0"); 
		lu_user_assert(h > 0, "Height should be greater than 0");
		lu_user_assert(d > 0, "Depth should be greater than 0");

		self->rec 		= rec;
		self->type 		= type;
		self->l 		= l;
		self->w 		= w;
		self->h 		= h;
		self->d 		= d;

		self->neus = (S_Neu*) mem_alloc(mem, sizeof(S_Neu) * self->w * self->h * self->d);
		lu_user_assert(self->neus, "Cannot allocate S_Layer neus");

		return self;
	}