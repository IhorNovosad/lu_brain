 /**
	Copyright Â© 2020 Oleh Ihorovych Novosad 
*/

///////////////////////////////////////////////////////////////////////////////
// Includes

	#include "lu_rec_opts.lu"
	#include "lu_rec_opts_config.lu"
 
///////////////////////////////////////////////////////////////////////////////
// Init, create and destroy

	static Lu_Rec rec_create(Lu_Brain brain, Lu_Rec_Opts opts)
	{
		lu_user_assert(brain, "Lu_Brain is NULL");
		lu_user_assert(opts, "Opts is NULL");

		Lu_Rec self 			= (Lu_Rec) mem_alloc(brain->app_mem, sizeof(struct lu_rec));
		lu_user_assert(self, "Cannot allocate lu_rec");

		// Initialize
		self->brain 			= brain;
		self->config 			= opts->config;

		//lu_debug("\n\nrec->config.v_nsc=%d\n\n", self->v_nsc);

		return self;
	}

	static void rec_destroy(Lu_Rec self)
	{
		mem_free(self->brain->app_mem, (lu_p_byte) self);
	}

///////////////////////////////////////////////////////////////////////////////
// 